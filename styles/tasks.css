.tasks {
    @apply flex flex-col flex-nowrap;

    counter-reset: task;
    --task-spacing: 8px;
    --task-dot-radius: 12px;
}

.tasks .task {
    @apply relative;

    padding-left: 40px;
    --step-dot-color: hsl(var(--n));
    --step-bar-top-color: hsl(var(--n));
    --step-bar-bottom-color: hsl(var(--b3));
    --step-bar-top-height: calc(var(--task-dot-radius) + var(--task-spacing));
}

.tasks .task > *:first-child { padding-top: var(--task-spacing); }
.tasks .task > *:last-child { padding-bottom: var(--task-spacing); }

.tasks .task:after {
    @apply absolute top-0 left-0;

    content: " ";
    background-color: var(--step-dot-color);
    color: hsl(var(--nc));
    margin: var(--task-spacing);
    z-index: 1;
    font-size: var(--task-dot-radius);

    height: calc(var(--task-dot-radius) * 2);
    width: calc(var(--task-dot-radius) * 2);

    @apply col-start-1 row-start-1 row-span-full place-self-start rounded-circle grid place-items-center;
}

.tasks .task:before {
    @apply absolute top-0 h-full w-1 overflow-hidden -translate-x-1/2;
    left: calc(var(--task-dot-radius) + var(--task-spacing));

    content: "";

    background: linear-gradient(
            var(--step-bar-top-color) 0%,
            var(--step-bar-top-color) var(--step-bar-top-height),
            var(--step-dot-color) calc(var(--step-bar-top-height) + var(--task-dot-radius) * 0.9),
            var(--step-bar-bottom-color) 100%);
    color: hsl(var(--nc));
}

.tasks .task:first-of-type::before {
    --step-bar-top-color: transparent !important;
}

.tasks .task:last-of-type::before {
    background: linear-gradient(
            var(--step-bar-top-color) 0%,
            var(--step-bar-top-color) var(--step-bar-top-height),
            transparent calc(var(--step-bar-top-height) + var(--task-dot-radius) * 0.9),
            transparent 100%);
}

.tasks > .task:not([data-status]) {
    --step-bar-top-color: hsl(var(--b3));
    --step-dot-color: hsl(var(--b3));
}

.tasks > .task.loading:last-of-type {
    --step-bar-bottom-color: hsl(var(--b3));
}

.tasks > .task[data-status="finish"]:last-of-type { content: "★"; }

.tasks > .task[data-status="loading"]:first-of-type,
.tasks > .task[data-status="success"] ~ .task[data-status="loading"]
{
    --step-bar-bottom-color: hsl(var(--b3));
}

.tasks > .task[data-status="error"]:first-child::before,
.tasks > .task[data-status="success"] ~ .task[data-status="error"]::before
{
    background: linear-gradient(
            var(--step-bar-top-color) 0%,
            var(--step-bar-top-color) var(--step-bar-top-height),
            hsl(var(--b3)) calc(var(--step-bar-top-height) + var(--task-dot-radius) * 0.9),
            hsl(var(--b3)) 100%);
}

.tasks > .task[data-status] {
    --step-bar-bottom-color: hsl(var(--n));
}

.tasks > .task[data-status="success"]::after { content: "✓"; }
.tasks > .task[data-status="error"]::after { content: "✕"; }
.tasks > .task[data-status="finish"]::after { content: "★"; }
.tasks > .task[data-status="loading"]::after  {
    background: hsla(var(--b1) / var(--tw-bg-opacity, 1)) ;
    border-width: 4px;
    border-color: transparent hsl(var(--n)) hsl(var(--n)) transparent;

    animation: spin 2s linear infinite;
}

@keyframes task-loading-dual-ring {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

.tasks > .task:not([data-status]) {
    @apply font-light;
    color: hsl(var(--b3));
}

.tasks > .task[data-status="error"] > .error-message { @apply text-red-500 block; }
.tasks > .task[data-status="error"] > .error-message:before { content: "❌"; padding-right: 1ch; }
.tasks > .task > :not(:first-child) { @apply ml-4; }
.tasks > .task > :nth-child(2) { @apply mt-2; }


